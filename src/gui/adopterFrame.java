/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

/**
 *
 * @author joshu
 */
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.text.DateFormat;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.Color;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.Font;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import dbconnection.ConnectionMySQL;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;

public class adopterFrame extends javax.swing.JFrame {

    /**
     * Creates new form adopterFrame
     */
    private int selectedRowIndex = -1;
    
    public adopterFrame() {
         setIconImage(new ImageIcon(getClass().getResource("/logos/petAdoptionSystemLogo.png")).getImage());

        initComponents();
        setSize(950, 520);
        setLocationRelativeTo(null); // Center on screen
        loadAdoptionData();
        adoptionTable.getTableHeader().setBackground(Color.BLACK);
        adoptionTable.getTableHeader().setForeground(Color.WHITE);
        adoptionTable.getTableHeader().setForeground(Color.BLACK);
        adoptionTable.getTableHeader().setFont(new Font("Arial", Font.PLAIN, 11));
        setLocationRelativeTo(null); // Center on screen
        
        addTableClickListener();
        updateButton.setEnabled(false);
        deleteButton.setEnabled(false);

        
    }
    
    private void addTableClickListener() {
            adoptionTable.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    selectedRowIndex = adoptionTable.getSelectedRow();
                    if (selectedRowIndex != -1) {
                        updateButton.setEnabled(true);
                        deleteButton.setEnabled(true);
                    }
                }
            });
    }
    
public void loadAdoptionData() {
    DefaultTableModel model = (DefaultTableModel) adoptionTable.getModel();
    model.setRowCount(0); // Clear existing rows

    String sql = """
        SELECT 
            a.AdoptionID,
            a.AdopterID,
            a.AdopterName,
            a.Contact,
            p.PetName,
            p.Species,
            p.Breed,
            a.DateAdopted
        FROM adoptions a
        JOIN pets p ON a.PetID = p.PetID
    """;

    try (Connection conn = ConnectionMySQL.getConnection();
         PreparedStatement stmt = conn.prepareStatement(sql);
         ResultSet rs = stmt.executeQuery()) {

        while (rs.next()) {
            Object[] row = new Object[8]; // Adjust to match column count
            row[0] = rs.getInt("AdoptionID");     // âœ… First column now
            row[1] = rs.getInt("AdopterID");
            row[2] = rs.getString("AdopterName");
            row[3] = rs.getString("Contact");
            row[4] = rs.getString("PetName");
            row[5] = rs.getString("Species");
            row[6] = rs.getString("Breed");
            row[7] = rs.getString("DateAdopted");

            model.addRow(row);
        }

        adoptionTable.revalidate();
        adoptionTable.repaint();

    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading adoption data: " + e.getMessage());
    }
}
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        adoptionTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(251, 250, 251));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 650));

        jPanel2.setBackground(new java.awt.Color(255, 183, 91));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 543));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updateButton.setBackground(new java.awt.Color(172, 95, 3));
        updateButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("UPDATE");
        updateButton.setBorder(null);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        jPanel2.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 140, 60));

        deleteButton.setBackground(new java.awt.Color(172, 49, 3));
        deleteButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.setBorder(null);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel2.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 140, 60));

        exitButton.setBackground(new java.awt.Color(252, 57, 45));
        exitButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText("EXIT");
        exitButton.setBorder(null);
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jPanel2.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 140, 60));

        jPanel3.setBackground(new java.awt.Color(255, 141, 4));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Adopters");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 80));

        adoptionTable.setBackground(new java.awt.Color(255, 255, 255));
        adoptionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Adoption ID", "Adopter No.", "Adopter Name", "Contact", "Pet Name", "Species", "Breed", "Date Adopted"
            }
        ));
        jScrollPane1.setViewportView(adoptionTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(311, 311, 311))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1255, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        MainFrame main = new MainFrame();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
       int selectedRow = adoptionTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an adoption record to update.");
            return;
        }

         // Get values from the selected row (adjust column indexes if needed)
        int adoptionID = Integer.parseInt(adoptionTable.getValueAt(selectedRow, 0).toString());     // AdoptionID at column 0
        int adopterID = Integer.parseInt(adoptionTable.getValueAt(selectedRow, 1).toString());      // AdopterID at column 1
        String adopterName = adoptionTable.getValueAt(selectedRow, 2).toString();                   // AdopterName at column 2
        String contact = adoptionTable.getValueAt(selectedRow, 3).toString();                       // Contact at column 3
        String dateAdopted = adoptionTable.getValueAt(selectedRow, 7).toString();                   // DateAdopted at column 6
        System.out.println("Adopter ID: " + adopterID);
        System.out.println("Adopter Name: " + adopterName);
        System.out.println("Contact: " + contact);
        System.out.println("Date Adopted: " + dateAdopted);


        // Open the update form for the adoption record
        updateAdopterForm updateForm = new updateAdopterForm(this, adoptionID, adopterID, adopterName, contact, dateAdopted);
        updateForm.setVisible(true);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = adoptionTable.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an adoption record to delete.");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete this adoption record?", 
                "Delete Confirmation", JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        Object adoptionIdValue = adoptionTable.getValueAt(selectedRow, 0); // AdoptionID is in column 0
        int adoptionID;

        try {
            if (adoptionIdValue instanceof Integer) {
                adoptionID = (Integer) adoptionIdValue;
            } else {
                adoptionID = Integer.parseInt(adoptionIdValue.toString());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error: Invalid adoption ID format.");
            e.printStackTrace();
            return;
        }

        int petID = 0;

        try (Connection conn = ConnectionMySQL.getConnection()) {
            // Get PetID from adoptions table using AdoptionID
            PreparedStatement fetchPetId = conn.prepareStatement("SELECT PetID FROM adoptions WHERE AdoptionID = ?");
            fetchPetId.setInt(1, adoptionID);
            ResultSet rs = fetchPetId.executeQuery();

            if (rs.next()) {
                petID = rs.getInt("PetID");
            } else {
                JOptionPane.showMessageDialog(this, "PetID not found for the selected adoption record.");
                return;
            }

            // Start transaction
            conn.setAutoCommit(false);

            // 1. Delete from adoptions
            PreparedStatement deleteStmt = conn.prepareStatement("DELETE FROM adoptions WHERE AdoptionID = ?");
            deleteStmt.setInt(1, adoptionID);
            int rowsAffected = deleteStmt.executeUpdate();

            if (rowsAffected > 0) {
                // 2. Update pet status to 'Available'
                PreparedStatement updatePetStmt = conn.prepareStatement("UPDATE pets SET Status = 'Available' WHERE PetID = ?");
                updatePetStmt.setInt(1, petID);
                updatePetStmt.executeUpdate();

                conn.commit(); // Commit both actions
                JOptionPane.showMessageDialog(this, "Adoption record deleted and pet status reset to 'Available'.");
                loadAdoptionData(); // Refresh table
            } else {
                conn.rollback();
                JOptionPane.showMessageDialog(this, "Failed to delete adoption record.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adopterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adopterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adopterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adopterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adopterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adoptionTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
